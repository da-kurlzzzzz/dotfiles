" should be default
let rcpath = resolve(expand('<sfile>:p'))
let rcpath = fnamemodify(rcpath, ':h')
let tosource = rcpath . '/defaults.vim'
execute 'source '.tosource

" changes to defaults
augroup vimHints | exe 'au!' | augroup END
nnoremap Y y$

" interface things
" wrap everywhere
set whichwrap=b,s,h,l,<,>,~,[,]
set number relativenumber
set hlsearch
" this just feels more natural
set splitbelow splitright

" warning: spaces person
" also, shiftwidth and softtabstop use neat tricks to keep them equal to
" tabstop.  See :help
set expandtab shiftround tabstop=4 shiftwidth=0 softtabstop=-1 smartindent

" wildmode: tab completes, second tab opens wildmenu
set ignorecase smartcase
set wildmode=longest:full,full
set wildignorecase

" much better than less
runtime ftplugin/man.vim
set keywordprg=:Man

" see man ctags
set tags+=~/.vim/tags

" silent make
set makeprg=make\ -s

" persistent undo feels good
if !isdirectory($HOME."/.vim")
    call mkdir($HOME."/.vim", "", 0755)
endif
if !isdirectory($HOME."/.vim/undo")
    call mkdir($HOME."/.vim/undo", "", 0700)
endif
set undodir=~/.vim/undo
set undofile

" tricks for cursor shape and tmux colors
set ttymouse=xterm2
let &t_SI="\e[6 q"
let &t_EI="\e[2 q"
set background=dark

nnoremap <SPACE> <Nop>
let mapleader=" "
nnoremap <silent> <Leader>/ :nohlsearch<CR>
" force write trick
nnoremap <silent> <Leader>w :execute 'silent write !sudo tee % >/dev/null' <bar> edit!<CR>
" added before started using tmux, might delete later
nnoremap <silent> <Leader>t :execute 'terminal' <bar> execute 'setlocal nonumber'<CR>
" sometimes netrw can be useful
nnoremap <silent> <Leader>n :32Lexplore<CR>
" ctrl-l is remapped later, but we retain functionality
nnoremap <silent> <Leader>l :redraw!<CR>

" makes navigation easier
nnoremap <C-H> <C-W><C-H>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <expr> k (v:count > 1 ? "m'" . v:count : '') . 'k'
nnoremap <expr> j (v:count > 1 ? "m'" . v:count : '') . 'j'
nnoremap <silent> <C-W>v :vertical new<CR>

" per word undo
inoremap <Space> <C-G>u<Space>
inoremap <CR> <C-G>u<CR>

" swap meaning of : and ;
nmap ; :
xmap ; :
"nmap q; q:
nnoremap ;; ;
xnoremap ;; ;

map [[ ?{<CR>w99[{:nohlsearch<CR>
map ][ /}<CR>b99]}:nohlsearch<CR>
map ]] j0[[%/{<CR>:nohlsearch<CR>
map [] k$][%?}<CR>:nohlsearch<CR>

" skeleton files
let SKELDIR = $HOME."/.vim/skel"
if !isdirectory(SKELDIR)
    call mkdir(SKELDIR, "", 0755)
endif
autocmd BufNewFile * :silent! exec ":r ".SKELDIR."/".&filetype | 0delete _
set cpoptions-=a

" it is surprisingly useful sometimes
silent! set keymap=russian-jcukenwin-custom
set iminsert=0

" merge clipboard with system
set clipboard^=unnamed,unnamedplus

" ctrl-z sometimes messes up my terminal
nnoremap <C-Z> <nop>

" trying out folds
set foldmethod=marker

let g:netrw_banner=0
let g:netrw_liststyle=3
" let g:netrw_bufsettings='noma nomod nonu nowrap ro nobl'
  let g:netrw_bufsettings='noma nomod nu   nowrap ro nobl'

let g:user_emmet_mode='i'
let g:user_emmet_leader_key='<C-E>'

" i put a little emacs in your vim
cnoremap <C-A> <Home>
cnoremap <C-E> <End>

execute "set <A-B>=\eb"
cnoremap <A-B> <S-Left>
execute "set <A-F>=\ef"
cnoremap <A-F> <S-Right>
